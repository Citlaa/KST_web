{"remainingRequest":"C:\\Users\\MIlapDell\\source\\repos\\KST\\kst_web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\MIlapDell\\source\\repos\\KST\\kst_web\\src\\components\\Alumnos\\RegistroDeAlumnos.vue?vue&type=template&id=e8639d0a&scoped=true&","dependencies":[{"path":"C:\\Users\\MIlapDell\\source\\repos\\KST\\kst_web\\src\\components\\Alumnos\\RegistroDeAlumnos.vue","mtime":1657342430793},{"path":"C:\\Users\\MIlapDell\\source\\repos\\KST\\kst_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\MIlapDell\\source\\repos\\KST\\kst_web\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\MIlapDell\\source\\repos\\KST\\kst_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\MIlapDell\\source\\repos\\KST\\kst_web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}