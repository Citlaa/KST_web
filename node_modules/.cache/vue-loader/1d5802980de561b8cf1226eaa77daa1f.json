{"remainingRequest":"C:\\Users\\MIlapDell\\source\\repos\\KST\\kst_web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\MIlapDell\\source\\repos\\KST\\kst_web\\src\\components\\Alumnos\\Tutores\\RegistroDeTutores.vue?vue&type=template&id=53f47036&","dependencies":[{"path":"C:\\Users\\MIlapDell\\source\\repos\\KST\\kst_web\\src\\components\\Alumnos\\Tutores\\RegistroDeTutores.vue","mtime":1663340263774},{"path":"C:\\Users\\MIlapDell\\source\\repos\\KST\\kst_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\MIlapDell\\source\\repos\\KST\\kst_web\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\MIlapDell\\source\\repos\\KST\\kst_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\MIlapDell\\source\\repos\\KST\\kst_web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}