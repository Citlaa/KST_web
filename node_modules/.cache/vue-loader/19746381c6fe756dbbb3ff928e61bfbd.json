{"remainingRequest":"D:\\KST\\KST_web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\KST\\KST_web\\src\\components\\Administracion\\Grupos.vue?vue&type=template&id=2414d04a&","dependencies":[{"path":"D:\\KST\\KST_web\\src\\components\\Administracion\\Grupos.vue","mtime":1637726996049},{"path":"D:\\KST\\KST_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1630552272397},{"path":"D:\\KST\\KST_web\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1630552337859},{"path":"D:\\KST\\KST_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1630552272397},{"path":"D:\\KST\\KST_web\\node_modules\\vue-loader\\lib\\index.js","mtime":1630552337857}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}