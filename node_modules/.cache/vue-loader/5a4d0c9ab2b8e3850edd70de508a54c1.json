{"remainingRequest":"C:\\Users\\MIlapDell\\source\\repos\\KST\\kst_web\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\MIlapDell\\source\\repos\\KST\\kst_web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\MIlapDell\\source\\repos\\KST\\kst_web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\MIlapDell\\source\\repos\\KST\\kst_web\\src\\components\\Catalogos\\TiposCicloEscolar.vue?vue&type=template&id=1cbf6410&","dependencies":[{"path":"C:\\Users\\MIlapDell\\source\\repos\\KST\\kst_web\\src\\components\\Catalogos\\TiposCicloEscolar.vue","mtime":1635829111448},{"path":"C:\\Users\\MIlapDell\\source\\repos\\KST\\kst_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\MIlapDell\\source\\repos\\KST\\kst_web\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\MIlapDell\\source\\repos\\KST\\kst_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\MIlapDell\\source\\repos\\KST\\kst_web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}